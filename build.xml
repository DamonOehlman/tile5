<!--
File:  build.xml
This file is used to build and minify the sidelab slick library for production use.  The build file
is adapted from the jQuery build file which can be found at the following location:

http://github.com/jquery/jquery/blob/master/build.xml
-->
<project name="slick" default="build-slick" basedir=".">
	<loadfile property="version" srcfile="version.txt" />
    <property description="Distribution target for slick library" name="dist" value="./dist" />

	<property name="LIBNAME" value="slick" />
    <property name="SLICK" value="${dist}/${LIBNAME}.js" />
    <property name="SLICK_MIN" value="${dist}/${LIBNAME}.min.js" />
	<property name="JSDOC_HOME" value="/development/tools/jsdoc-toolkit" />
	
	<!-- properties for configuring the test runner -->
	<property name="PATH.LIGHTTPD" value="/opt/local/sbin/lighttpd" />
	<property name="TESTRUNNER.HOST" value="10.1.1.100" />
	<property name="TESTRUNNER.PORT" value="9100" />
	
	<!-- grunt cloning code -->
	
	<available property="grunt" file="lib/grunt" />
	
	<target name="grunt-clone" unless="grunt">
		<exec executable="git" outputproperty="git-grunt" >  
			<arg line="clone git://github.com/sidelab/grunt.git lib/grunt"/>  
		</exec>
		<echo message="git clone grunt: ${git-grunt}" />
	</target>

	<target name="grunt-pull" if="grunt">
		<exec executable="git" outputproperty="git-grunt" dir="lib/grunt" >  
			<arg line="pull origin master"/>  
		</exec> 
		<echo message="git pull grunt: ${git-grunt}" />
	</target>
	
	<target name="grunt-build" depends="grunt-clone,grunt-pull">
		<ant dir="lib/grunt" />
	</target>
	
	<target name="build-slick" depends="grunt-build" description="Slick library core build, concatenates core files and updates @VERSION">
		<echo message="BUILDING SLICK CORE" />
		<mkdir dir="${dist}" />
		
		<!-- concatenate the core file set -->
		<!-- TODO: create more logical separation in the core library -->
		<concat destfile="${SLICK}">
			<!-- include the header -->
			<fileset file="src/js/template/header.js" />
			
			<!-- include dependencies -->
			<fileset file="lib/grunt/dist/grunt.js" />
			
			<!-- include core functionality -->
			<fileset file="src/js/core.js" />
			<fileset file="src/js/resources.js" />
			<fileset file="src/js/touch.js" />
			<fileset file="src/js/behaviours.js" />
			<fileset file="src/js/dispatcher.js" />
			<fileset file="src/js/messaging.js" />
			<fileset file="src/js/animation.js" />
			
			<!-- include graphics and tiling -->
			<fileset file="src/js/graphics.js" />
			<fileset file="src/js/tiling.js" />

			<fileset file="src/js/mapping/geo.js" />
			<fileset file="src/js/mapping/search.js" />
			<fileset file="src/js/mapping/ui.js" />
			<fileset file="src/js/mapping/routing.js" />
		</concat>
		
		<!-- construct the core providers -->
		<concat destfile="${dist}/${LIBNAME}.openstreetmap.js">
			<fileset file="src/js/mapping/providers/osm.js" />
			<fileset file="src/js/mapping/providers/cloudmade.js" />
		</concat>
		
		<concat destfile="${dist}/${LIBNAME}.decarta.js">
			<fileset file="src/js/mapping/providers/decarta.js" />
		</concat>
		
		<!-- construct the native libraries -->
		<concat destfile="${dist}/${LIBNAME}.native.js">
			<fileset file="src/js/native/core.js" />
			<fileset file="src/js/native/ui.js" />
		</concat>
		
		<concat destfile="${dist}/${LIBNAME}.rhodes.js">
			<fileset file="src/js/native/rhodes/core.js" />
			<fileset file="src/js/native/rhodes/ajax.js" />
		</concat>
		
		<!-- concatenate the phonegap file set -->
		<concat destfile="${dist}/${LIBNAME}.phonegap.js">
			<fileset file="src/js/native/phonegap/core.js" />
		</concat>
		
		<concat destfile="${dist}/${LIBNAME}.titanium.js">
			<fileset file="src/js/native/titanium/core.js" />
			<fileset file="src/js/native/titanium/ajax.js" />
		</concat>
		
		<concat destfile="${dist}/tests.${LIBNAME}.js">
			<fileset file="lib/grunt/dist/grunt.test.js" />
			<fileset file="test/unit/core.js" />
			<fileset file="test/unit/mapping.js" />
			<fileset file="test/unit/cloudmade.js" />
		</concat>
		
		<!-- TODO: if the strip logging property is set, then strip it -->
		<!--
		<replaceregexp match="GRUNT.Log\.(log|info|warn).*?\;" replace="" flags="g" byline="false" file="${SLICK}" />
		-->
		
		<!-- TODO: call the targets to concatenate the required modules -->
		
		<replaceregexp match="@VERSION" replace="${version}" flags="g" byline="true" file="${SLICK}" />
		<replaceregexp match="Date: " replace="Date: ${date}" file="${SLICK}" />
        <echo message="${SLICK} (and associated libraries) built." />
	</target>
	
    <target name="min" depends="build-slick" description="Remove all comments and whitespace, no compression, great in combination with GZip">
        <echo message="Building ${SLICK_MIN}" />

		<apply executable="java" parallel="false" verbose="true" dest="${dist}">
			<fileset dir="${dist}">
				<include name="${LIBNAME}.js" />
			</fileset>
			<arg line="-jar" />
			<arg path="build/google-compiler-20100629.jar" />
			<!-- go hard with advanced optimizations -->
			<arg value="--compilation_level" />
			<arg value="SIMPLE_OPTIMIZATIONS" />
			<arg value="--js_output_file" />
			<targetfile />
			<arg value="--js" />
			<mapper type="glob" from="${LIBNAME}.js" to="tmpmin" />
		</apply>
		
		<concat destfile="${SLICK_MIN}">
			<filelist files="dist/tmpmin"/>
		</concat>
		
		<delete file="dist/tmpmin"/>
        <echo message="${SLICK_MIN} built." />
    </target>

    <target name="clean">
        <delete dir="${dist}" />
    </target>

	<target name="jsdoc">
		<exec executable="java">
			<arg line="-jar ${JSDOC_HOME}/jsrun.jar ${JSDOC_HOME}/app/run.js -v -t=${JSDOC_HOME}/templates/jsdoc/ --recurse=10 -d=apidoc src/js"/>
		</exec>
	</target>
	
	<!-- lighttpd search and destroy functions -->
	<target name="lighttpd.search">
		<exec executable="sh" outputproperty="lighttpd.pid" >
			<arg line="-c 'ps x -o pid=,command= | grep -E lighttpd[[:blank:]]\-f | cut -d \  -f 1'" />
		</exec>
	</target>
	
	<target name="lighttpd.destroy" if="lighttpd.pid">
		<exec executable="kill">
			<arg line="${lighttpd.pid}" />
		</exec>
	</target>
	
	<target name="testrunner" depends="lighttpd.search, lighttpd.destroy">
		<!-- copy the template config to the actual config -->
		<copy tofile="test/frontend/lighttpd.conf" overwrite="true">
			<fileset file="test/frontend/lighttpd.template.conf" />
			
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>
		
		<!-- start lighttpd -->
		<exec executable="${PATH.LIGHTTPD}">
			<arg line="-f test/frontend/lighttpd.conf" />
		</exec>
	</target>

	<target name="openAjaxMetadata">
		<property name="target" value="openAjaxMetadata-jquery-${version}.xml" />
		<delete file="dist/jquery-*.xml" />
		<get src="http://www.exfer.net/jquery/createjQueryXMLDocs.py?version=1.3" dest="${target}" />
		<xslt includes="${target}" excludes="build.xml" destdir="./dist" style="build/style.xsl" extension=".xml" />
		<delete file="${target}" />
	</target>
</project>