AnimatedPathLayer
=================

**Module**: T5

The AnimatedPathLayer is way cool :)  This layer allows you to supply an array of screen / grid coordinates and have that animated using the functionality T5.Animation module.  One of the primary purposes of this layer is displaying animation for the T5.Geo.UI.RouteOverlay but in reality you could generate animations for any type of path.

Constructor Parameters
----------------------

- __path__ (T5.Vector[])

	An array of screen / grid coordinates that will be used as anchor points in the animation.
	
- id (String, default = "pathAnimation_n_")

	The id of of the animation layer.  The id will start with pathAnimation1 and then automatically increment each time a new AnimatedPathLayer is created unless the id is manually specified in the constructor parameters.
	
- easing (T5.Animation.Easing function, default = T5.Animation.Easing.Sine.InOut)

	The T5.Animation.Easing function that will be used to calculate the position based on the animation elapsed time and duration.
	
- validStates (T5.Graphics.DisplayState bitmask, default = active + pan + pinchzoom)

	The valid draw states that the animation will draw on.  Override the value of this parameter if you wish to change it (NOTE: fastDraw not set for this layer so on slower devices the animation will be hidden will panning or scaling).
	
- drawIndicator (callback function - see below, default = defaultDraw function)

	A callback function that is called every time the indicator for the animation needs to be drawn.  If the parameter is not specified in the constructor the default callback is used, which simply draws a small circle at the current position of the animation.
	
- duration (int, default = 2000)

	The animation duration.  See T5.Animation module information for more details.
	
- autoCenter (boolean, default = false)

	Whether or not the T5.Graphics.View should be panned with the animation.
	
Draw Indicator Callback Function
--------------------------------

- `function(context, offset, xy, theta)`

	The drawIndicator parameter in the constructor allows you to specify a particular callback function that is used when drawing the indicator.  The function takes the following arguments:
	
	- context - the canvas context to draw to when drawing the indicator
	- offset - the current tiling offset to take into account when drawing
	- xy - the xy position where the indicator should be drawn (offset accounted for)
	- theta - the current angle (in radians) given the path positioning.
	
Usage
-----

To be completed.

	